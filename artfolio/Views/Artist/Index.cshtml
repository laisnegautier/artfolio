@model ArtistIndexViewModel
@inject SignInManager<Artist> SignInManager
@inject UserManager<Artist> UserManager
@{
    ViewData["Title"] = Model.Artist.Firstname + " " + Model.Artist.Lastname + "'s artfolio";
    Layout = "~/Views/Shared/_Layout.cshtml";

    string Age(DateTime birthday)
    {
        DateTime now = DateTime.Today;
        int age = now.Year - birthday.Year;
        if (now < birthday.AddYears(age)) age--;

        return age.ToString();
    }

    string targetDelete(int id)
    {
        return "#deleteCollection" + id;
    }

    string targetAddArtwork(int id)
    {
        return "#addArtworkCollection" + id;
    }
}

@* ADMINISTRATION *@
@if (SignInManager.IsSignedIn(User) && UserManager.GetUserName(User) == Model.Artist.UserName)
{
    <div class="controls">
        <div class="col-lg-9 mx-auto">
            <div class="scroll-horizontal-controls">

                <div class="encart encart-div">
                    <h3>artworks</h3>
                    <div class="link-content">
                        <a asp-controller="Discover"
                           asp-action="Index">
                            add
                        </a>
                        <a asp-controller="Discover"
                           asp-action="Index">
                            delete
                        </a>
                        <a asp-controller="Discover"
                           asp-action="Index">
                            edit
                        </a>
                    </div>
                </div>

                <div class="encart encart-div">
                    <h3>collections</h3>
                    <div class="link-content">
                        <a asp-controller="Discover"
                           asp-action="Index">
                            add
                        </a>
                        <a asp-controller="Discover"
                           asp-action="Index">
                            delete
                        </a>
                        <a asp-controller="Discover"
                           asp-action="Index">
                            update
                        </a>
                    </div>
                </div>

                <div class="encart encart-div">
                    <h3>infos</h3>
                    <div class="link-content">
                        <a asp-controller="Discover"
                           asp-action="Index">
                            visibility
                        </a>
                        <a asp-controller="Discover"
                           asp-action="Index">
                            edit infos
                        </a>
                        <a asp-controller="Discover"
                           asp-action="Index">
                            share
                        </a>
                    </div>
                </div>

                <div class="encart encart-div">
                    <h3>following</h3>
                    <div class="link-content">
                        <a asp-controller="Discover"
                           asp-action="Index">
                            artists followed
                        </a>
                        <a asp-controller="Discover"
                           asp-action="Index">
                            followed by
                        </a>
                        <a asp-controller="Discover"
                           asp-action="Index">
                            messages
                        </a>
                    </div>
                </div>

            </div>
        </div>
    </div>
}


<div class="col-md-9 mx-auto">
    <h2 class="font-weight-lighter">followed by</h2>
    @if (!Model.Artist.FollowedBy.Any())
    {
        <h6>No one (yet).</h6>
    }
    else
    {
        <div class="scroll-horizontal-artists">
            @foreach (var followRelation in Model.Artist.FollowedBy)
            {
                <a asp-controller="Artist" asp-action="Index" asp-route-userName="@followRelation.FromArtist.UserName" class="artist-card">
                    <div class="d-flex w-100 align-items-center">
                        <div class="profile-pic">
                            @if (followRelation.FromArtist.PhotoFilePath != null)
                            {
                                <img src="~/images/avatars/thumbnails/@Html.DisplayFor(modelItem => followRelation.FromArtist.PhotoFilePath)" width="80" style="margin: auto" alt="profile picture" />
                            }
                        </div>
                        <div class="d-flex justify-content-between flex-grow-1">
                            <div class="ml-2 d-flex flex-column justify-content-center">
                                <h6 class="m-0">
                                    @Html.DisplayFor(modelItem => followRelation.FromArtist.Firstname) @Html.DisplayFor(modelItem => followRelation.FromArtist.Lastname)
                                </h6>
                                <small class="m-0 text-muted">
                                    @Html.DisplayFor(modelItem => followRelation.FromArtist.UserName)
                                </small>
                            </div>
                            @if (followRelation.FromArtist.FollowedBy.Count > 0)
                            {
                                if (SignInManager.IsSignedIn(User))
                                {
                                    foreach (var followedBy in followRelation.FromArtist.FollowedBy)
                                    {
                                        if (followedBy.FromArtistId == UserManager.GetUserId(User))
                                        {
                                            <img class="ml-1 d-flex align-items-center" src="~/images/icons/star-outline.svg" width="15" alt="You follow this artist" title="You follow this artist" />
                                        }
                                    }
                                }
                            }
                        </div>
                    </div>
                </a>
            }
        </div>
    }
</div>


<section class="col-md-9 mx-auto publish">

    <!-- Header -->
    <div class="row d-flex align-items-center" style="justify-content: space-evenly">
        <div class="profile-pic-nav" style="border-radius: 500px; box-shadow: 0 2px 4px lightgray; opacity: 1; overflow: hidden; width: 150px; height: 150px; display: flex; justify-content: center; align-items: center">
            @if (!string.IsNullOrEmpty(Model.Artist.PhotoFilePath))
            {
                <img src="~/images/avatars/@Model.Artist.PhotoFilePath" width="300" style="margin: auto" alt="profile picture" />
            }
        </div>

        <div class="col-md-9">
            <h1>@ViewData["Title"]</h1>
            <h4>@Model.Artist.Description</h4>
        </div>
    </div>

    <div>
        <div>
            <hr />
            <div class="mb-3 d-flex justify-content-between">
                <div>
                    <ul class="list-profile list-unstyled d-flex flex-row">
                        <li>User name : @Model.Artist.UserName</li>
                        <li>@Age(Model.Artist.DateOfBirth) ans</li>
                        @if (Model.Artist.Nationality == 0)
                        {
                            <li>Nationality : Do not wish to share</li>
                        }
                        else
                        {
                            <li>Nationality : @Html.DisplayFor(modelItem => modelItem.Artist.Nationality)</li>
                        }
                        @if (Model.Artist.Gender == 0)
                        {
                            <li>Gender : Do not wish to share</li>
                        }
                        else
                        {
                            <li>Gender : @Html.DisplayFor(modelItem => modelItem.Artist.Gender)</li>
                        }
                    </ul>
                </div>
                <div class="p-0 d-flex flex-wrap justify-content-end">
                    @if (SignInManager.IsSignedIn(User) && UserManager.GetUserName(User) != Model.Artist.UserName)
                    {
                        <a asp-area="" asp-controller="Messages" asp-action="Index" asp-route-userName="@Model.Artist.UserName" class="btn btn-artfolio m-0 mr-2">send a message</a>
                        @if (!(bool)ViewData["isFollowing"])
                        {
                            <a asp-area="" asp-controller="Artist" asp-action="Follow" asp-route-userName="@Model.Artist.UserName" class="btn btn-artfolio m-0">follow</a>
                        }
                        else
                        {
                            <a asp-area="" asp-controller="Artist" asp-action="Unfollow" asp-route-userName="@Model.Artist.UserName" class="btn btn-artfolio m-0">unfollow</a>
                        }
                    }
                    else
                    {
                        <a asp-area="Identity" asp-page="/Account/Register" class="btn btn-artfolio">sign up to contact this artist and follow him</a>
                    }
                </div>
            </div>

            <div class="row d-flex flex-wrap">

                @if (Model.Artist.Collections.Count > 0)
                {
                    foreach (Collection collection in Model.Artist.Collections)
                    {
                        <div class="col-md-6 nav nav-pills publish-menu flex-column">
                            <section class="w-100 artfolio-container">

                                <!-- Title -->
                                <h1 class="artfolio-container-header">
                                    @collection.Name

                                    @if (SignInManager.IsSignedIn(User) && UserManager.GetUserId(User) == Model.Artist.Id)
                                    {
                                        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="@targetDelete(collection.CollectionId)">
                                            &times;
                                        </button>
                                        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="@targetAddArtwork(collection.CollectionId)">
                                            +
                                        </button>
                                    }
                                </h1>

                                <!-- Content -->
                                <div class="artfolio-content">
                                    @collection.Description

                                    @foreach (Artwork artwork in collection.Artworks)
                                    {
                                        @await Html.PartialAsync("_ArtworkCard", new ArtworkCardPartialViewModel { Artwork = artwork })
                                    }
                                </div>
                            </section>
                        </div>

                        <!-- not the real name but needed here -->
                        @await Html.PartialAsync("_AddArtworkCollection.cshtml", new AddArtworkCollectionArtistViewModel
                                {
                                    CollectionId = collection.CollectionId,
                                    ToggleModalAddCollection = "addArtworkCollection" + collection.CollectionId,
                                    Artworks = Model.Artist.Artworks
                                })


                        @await Html.PartialAsync("_DeleteCollection.cshtml", new Collection { CollectionId = collection.CollectionId, Name = "deleteCollection" + collection.CollectionId })
                    }
                }
            </div>

            <!-- Button trigger modal -->
            @if (SignInManager.IsSignedIn(User) && UserManager.GetUserId(User) == Model.Artist.Id)
            {
                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModalCenter">
                    + Create a collection
                </button>
            }

            <!--
            Modal -->
            <div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="exampleModalLongTitle">Create a collection</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            @await Html.PartialAsync("_CreateCollection.cshtml", new Collection())
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>